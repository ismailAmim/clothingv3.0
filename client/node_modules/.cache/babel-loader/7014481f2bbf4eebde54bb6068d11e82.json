{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n  const collectionRef = firestore.collection('collections'); // action-start the moment the funct is called\n\n  dispatch(fetchCollectionsStart());\n  collectionRef.get().then(async snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/drh/clothingv3.0/src/redux/shop/shop.sagas.js"],"names":["takeEvery","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","dispatch","fetchCollectionsStart","get","then","snapshot","collectionsMap","catch","error","message","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,oBAAxB;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QACa,+BADb;AAGA,SAAQC,uBAAR,EACQC,uBADR,QAEa,gBAFb;AAIA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAmC;AACtC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAEA,QAAMC,aAAa,GAAER,SAAS,CAACS,UAAV,CAAqB,aAArB,CAArB,CAHsC,CAIlC;;AACAC,EAAAA,QAAQ,CAACC,qBAAqB,EAAtB,CAAR;AAEAH,EAAAA,aAAa,CAACI,GAAd,GACCC,IADD,CACM,MAAMC,QAAN,IAAiB;AACnB,UAAMC,cAAc,GAAEd,+BAA+B,CAACa,QAAD,CAArD;AACAJ,IAAAA,QAAQ,CAACR,uBAAuB,CAACa,cAAD,CAAxB,CAAR;AACH,GAJD,EAKCC,KALD,CAKQC,KAAK,IAAIP,QAAQ,CAACP,uBAAuB,CAACc,KAAK,CAACC,OAAP,CAAxB,CALzB;AAOP;AAED,OAAO,UAAUP,qBAAV,GAAmC;AACtC,QAAMZ,SAAS,CACXK,eAAe,CAACe,uBADL,EAEXd,qBAFW,CAAf;AAIH","sourcesContent":["import {takeEvery} from 'redux-saga/effects';\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap} \r\n        from '../../firebase/firebase.utils';\r\n\r\nimport {fetchCollectionsSuccess,\r\n        fetchCollectionsFailure}\r\n        from './shop.actions';\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionsAsync () {\r\n    yield console.log('I am fired');\r\n\r\n    const collectionRef =firestore.collection('collections');\r\n        // action-start the moment the funct is called\r\n        dispatch(fetchCollectionsStart());\r\n\r\n        collectionRef.get()\r\n        .then(async snapshot=> {\r\n            const collectionsMap =convertCollectionsSnapshotToMap(snapshot)\r\n            dispatch(fetchCollectionsSuccess(collectionsMap)); \r\n        })\r\n        .catch (error => dispatch(fetchCollectionsFailure(error.message))); \r\n   \r\n}\r\n\r\nexport function* fetchCollectionsStart () {\r\n    yield takeEvery(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionsAsync\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}