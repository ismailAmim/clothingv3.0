{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot); // put in sagas replace dispatch \n\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n  /*  collectionRef.get()\r\n   .then(async snapshot=> {\r\n       const collectionsMap =convertCollectionsSnapshotToMap(snapshot)\r\n       dispatch(fetchCollectionsSuccess(collectionsMap)); \r\n   })\r\n   .catch (error => dispatch(fetchCollectionsFailure(error.message))); \r\n  */\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/drh/clothingv3.0/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,IAAnB,EAAwBC,GAAxB,QAAkC,oBAAlC;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QACa,+BADb;AAGA,SAAQC,uBAAR,EACQC,uBADR,QAEa,gBAFb;AAIA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAmC;AACtC,MAAI;AACA,UAAMC,aAAa,GAAIN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAvB;AACA,UAAMC,QAAQ,GAAS,MAAMF,aAAa,CAACG,GAAd,EAA7B;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAACG,+BAAD,EAAiCO,QAAjC,CAAjC,CAHA,CAIA;;AACA,UAAMT,GAAG,CAACG,uBAAuB,CAACQ,cAAD,CAAxB,CAAT;AACH,GAND,CAME,OAAOC,KAAP,EAAc;AACZ,UAAMZ,GAAG,CAACI,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACE;;;;;;;;AAOF;AAEL,OAAO,UAAUC,qBAAV,GAAmC;AACtC,QAAMhB,SAAS,CACXO,eAAe,CAACU,uBADL,EAEXT,qBAFW,CAAf;AAIH","sourcesContent":["import {takeEvery, call,put} from 'redux-saga/effects';\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap} \r\n        from '../../firebase/firebase.utils';\r\n\r\nimport {fetchCollectionsSuccess,\r\n        fetchCollectionsFailure}\r\n        from './shop.actions';\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionsAsync () {\r\n    try {\r\n        const collectionRef  = firestore.collection('collections');\r\n        const snapshot       = yield collectionRef.get();\r\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap,snapshot);\r\n        // put in sagas replace dispatch \r\n        yield put(fetchCollectionsSuccess(collectionsMap));\r\n    } catch (error) {\r\n        yield put(fetchCollectionsFailure(error.message));\r\n    }\r\n       /*  collectionRef.get()\r\n        .then(async snapshot=> {\r\n            const collectionsMap =convertCollectionsSnapshotToMap(snapshot)\r\n            dispatch(fetchCollectionsSuccess(collectionsMap)); \r\n        })\r\n        .catch (error => dispatch(fetchCollectionsFailure(error.message))); \r\n    */\r\n    }\r\n\r\nexport function* fetchCollectionsStart () {\r\n    yield takeEvery(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionsAsync\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}