{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\drh\\\\clothingv3.0\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\drh\\\\clothingv3.0\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\drh\\\\clothingv3.0\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component'; //import { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\n\nimport './sign-up.styles.scss';\nimport { signUpStart } from '../../redux/user/user.actions';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  /* class SignUp extends React.Component {\r\n    constructor() {\r\n      super();\r\n  \r\n      this.state = {\r\n        displayName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      };\r\n    } */\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const displayName = userCredentials.displayName,\n        email = userCredentials.email,\n        password = userCredentials.password,\n        confirmPassword = userCredentials.confirmPassword;\n\n  const handleSubmit = async event => {\n    event.preventDefault(); //const { displayName, email, password, confirmPassword } = this.state;\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    } //const {signUpStart} = this.props;\n\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n    /* try {\r\n      const { user } = await auth.createUserWithEmailAndPassword(\r\n        email,\r\n        password\r\n      );\r\n        await createUserProfileDocument(user, { displayName });\r\n        this.setState({\r\n        displayName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    } */\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    })); //this.setState({ [name]: value });\n  };\n  /* render() {\r\n    const { displayName, email, password, confirmPassword } = this.state;\r\n   */\n\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"I do not have a account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit\n    /* this.handleSubmit */\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: this.handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: this.handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: this.handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: this.handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"SIGN UP\")));\n}; //}\n\n\nconst mapDispacthToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispacthToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/drh/clothingv3.0/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","displayName","email","password","confirmPassword","userCredentials","setCredentials","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapDispacthToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB,C,CAEA;;AAEA,OAAO,uBAAP;AACA,SAAQC,WAAR,QAA0B,+BAA1B;;AAEA,MAAMC,MAAM,GAAE,CAAC;AAACD,EAAAA;AAAD,CAAD,KAAiB;AAC/B;;;;;;;;;;;AAD+B,oBAcrBJ,QAAQ,CAAC;AACXM,IAAAA,WAAW,EAAE,EADF;AAEXC,IAAAA,KAAK,EAAE,EAFI;AAGXC,IAAAA,QAAQ,EAAE,EAHC;AAIXC,IAAAA,eAAe,EAAE;AAJN,GAAD,CAda;AAAA;AAAA,QAYvBC,eAZuB;AAAA,QAavBC,cAbuB;;AAAA,QAoBtBL,WApBsB,GAoB4BI,eApB5B,CAoBtBJ,WApBsB;AAAA,QAoBTC,KApBS,GAoB4BG,eApB5B,CAoBTH,KApBS;AAAA,QAoBFC,QApBE,GAoB4BE,eApB5B,CAoBFF,QApBE;AAAA,QAoBQC,eApBR,GAoB4BC,eApB5B,CAoBQD,eApBR;;AAsB9B,QAAMG,YAAY,GAAG,MAAMC,KAAN,IAAe;AACjCA,IAAAA,KAAK,CAACC,cAAN,GADiC,CAGjC;;AAEA,QAAIN,QAAQ,KAAKC,eAAjB,EAAkC;AAChCM,MAAAA,KAAK,CAAC,uBAAD,CAAL;AACA;AACD,KARgC,CASjC;;;AACAX,IAAAA,WAAW,CAAC;AAACE,MAAAA,WAAD;AAAaC,MAAAA,KAAb;AAAmBC,MAAAA;AAAnB,KAAD,CAAX;AACA;;;;;;;;;;;;;;;AAkBD,GA7BF;;AA+BA,QAAMQ,YAAY,GAAGH,KAAK,IAAI;AAAA,0BACHA,KAAK,CAACI,MADH;AAAA,UACnBC,IADmB,iBACnBA,IADmB;AAAA,UACbC,KADa,iBACbA,KADa;AAE3BR,IAAAA,cAAc,mBAAKD,eAAL;AAAsB,OAACQ,IAAD,GAAOC;AAA7B,OAAd,CAF2B,CAG3B;AACD,GAJF;AAMC;;;;;AAEK,SACD;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFF,EAGE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,QAAQ,EAAEP;AAAY;AAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,IAAA,KAAK,EAAEN,WAHT;AAIE,IAAA,QAAQ,EAAE,KAAKU,YAJjB;AAKE,IAAA,KAAK,EAAC,cALR;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAET,KAHT;AAIE,IAAA,QAAQ,EAAE,KAAKS,YAJjB;AAKE,IAAA,KAAK,EAAC,OALR;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAiBE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAER,QAHT;AAIE,IAAA,QAAQ,EAAE,KAAKQ,YAJjB;AAKE,IAAA,KAAK,EAAC,UALR;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,EAyBE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,iBAFP;AAGE,IAAA,KAAK,EAAEP,eAHT;AAIE,IAAA,QAAQ,EAAE,KAAKO,YAJjB;AAKE,IAAA,KAAK,EAAC,kBALR;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,EAiCE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAjCF,CAHF,CADC;AAyCJ,CAtGH,C,CAuGA;;;AAEA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAI;AACrCjB,EAAAA,WAAW,EAACM,eAAe,IAAEW,QAAQ,CAACjB,WAAW,CAACM,eAAD,CAAZ;AADA,CAAJ,CAAnC;;AAGA,eAAeT,OAAO,CAAC,IAAD,EAAMmB,kBAAN,CAAP,CAAiCf,MAAjC,CAAf","sourcesContent":["import React,{useState} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\n//import { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\r\n\r\nimport './sign-up.styles.scss';\r\nimport {signUpStart} from '../../redux/user/user.actions';\r\n\r\nconst SignUp =({signUpStart})=>{\r\n/* class SignUp extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      displayName: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: ''\r\n    };\r\n  } */\r\n const [userCredentials, \r\n        setCredentials \r\n      ] = useState({\r\n        displayName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      }); \r\n const { displayName, email, password, confirmPassword } = userCredentials;\r\n \r\n const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    //const { displayName, email, password, confirmPassword } = this.state;\r\n\r\n    if (password !== confirmPassword) {\r\n      alert(\"passwords don't match\");\r\n      return;\r\n    }\r\n    //const {signUpStart} = this.props;\r\n    signUpStart({displayName,email,password});\r\n    /* try {\r\n      const { user } = await auth.createUserWithEmailAndPassword(\r\n        email,\r\n        password\r\n      );\r\n\r\n      await createUserProfileDocument(user, { displayName });\r\n\r\n      this.setState({\r\n        displayName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    } */\r\n    \r\n  };\r\n\r\n const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    setCredentials({...userCredentials, [name]:value});\r\n    //this.setState({ [name]: value });\r\n  };\r\n\r\n  /* render() {\r\n    const { displayName, email, password, confirmPassword } = this.state;\r\n   */  return (\r\n      <div className='sign-up'>\r\n        <h2 className='title'>I do not have a account</h2>\r\n        <span>Sign up with your email and password</span>\r\n        <form className='sign-up-form' onSubmit={handleSubmit/* this.handleSubmit */}>\r\n          <FormInput\r\n            type='text'\r\n            name='displayName'\r\n            value={displayName}\r\n            onChange={this.handleChange}\r\n            label='Display Name'\r\n            required\r\n          />\r\n          <FormInput\r\n            type='email'\r\n            name='email'\r\n            value={email}\r\n            onChange={this.handleChange}\r\n            label='Email'\r\n            required\r\n          />\r\n          <FormInput\r\n            type='password'\r\n            name='password'\r\n            value={password}\r\n            onChange={this.handleChange}\r\n            label='Password'\r\n            required\r\n          />\r\n          <FormInput\r\n            type='password'\r\n            name='confirmPassword'\r\n            value={confirmPassword}\r\n            onChange={this.handleChange}\r\n            label='Confirm Password'\r\n            required\r\n          />\r\n          <CustomButton type='submit'>SIGN UP</CustomButton>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n//}\r\n\r\nconst mapDispacthToProps = dispatch =>({\r\n  signUpStart:userCredentials=>dispatch(signUpStart(userCredentials))\r\n});\r\nexport default connect(null,mapDispacthToProps)(SignUp);\r\n"]},"metadata":{},"sourceType":"module"}