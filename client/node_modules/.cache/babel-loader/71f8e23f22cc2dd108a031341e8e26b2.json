{"ast":null,"code":"import { takeEvery, call } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n  const collectionRef = firestore.collection('collections');\n  /*  collectionRef.get()\r\n   .then(async snapshot=> {\r\n       const collectionsMap =convertCollectionsSnapshotToMap(snapshot)\r\n       dispatch(fetchCollectionsSuccess(collectionsMap)); \r\n   })\r\n   .catch (error => dispatch(fetchCollectionsFailure(error.message))); \r\n  */\n\n  const snapshot = yield collectionRef.get();\n  const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/drh/clothingv3.0/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,IAAnB,QAA8B,oBAA9B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QACa,+BADb;AAGA,SAAQC,uBAAR,EACQC,uBADR,QAEa,gBAFb;AAIA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAmC;AACtC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAEA,QAAMC,aAAa,GAAER,SAAS,CAACS,UAAV,CAAqB,aAArB,CAArB;AAEG;;;;;;;;AAOH,QAAMC,QAAQ,GAAS,MAAMF,aAAa,CAACG,GAAd,EAA7B;AACA,QAAMC,cAAc,GAAG,MAAMb,IAAI,CAACE,+BAAD,EAAiCS,QAAjC,CAAjC;AACH;AAED,OAAO,UAAUG,qBAAV,GAAmC;AACtC,QAAMf,SAAS,CACXM,eAAe,CAACU,uBADL,EAEXT,qBAFW,CAAf;AAIH","sourcesContent":["import {takeEvery, call} from 'redux-saga/effects';\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap} \r\n        from '../../firebase/firebase.utils';\r\n\r\nimport {fetchCollectionsSuccess,\r\n        fetchCollectionsFailure}\r\n        from './shop.actions';\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionsAsync () {\r\n    yield console.log('I am fired');\r\n\r\n    const collectionRef =firestore.collection('collections');\r\n        \r\n       /*  collectionRef.get()\r\n        .then(async snapshot=> {\r\n            const collectionsMap =convertCollectionsSnapshotToMap(snapshot)\r\n            dispatch(fetchCollectionsSuccess(collectionsMap)); \r\n        })\r\n        .catch (error => dispatch(fetchCollectionsFailure(error.message))); \r\n    */\r\n    const snapshot       = yield collectionRef.get();\r\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap,snapshot);\r\n}\r\n\r\nexport function* fetchCollectionsStart () {\r\n    yield takeEvery(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionsAsync\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}