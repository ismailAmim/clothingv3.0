{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drh\\\\clothingv3.0\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux'; //import 'firebase/firestore';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections; // fetcihing for the collection ref\n\n    const collectionRef = firestore.collection('collections'); // get the snapShot collection    \n\n    /* collectionRef.onSnapshot(async snapshot=> {\r\n      const collectionsMap =convertCollectionsSnapshotToMap(snapshot)\r\n      updateCollections(collectionsMap);\r\n      this.setState({loading : false});\r\n    });\r\n       */\n\n    collectionRef.get.then(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispacthToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispacthToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/drh/clothingv3.0/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","get","then","snapshot","collectionsMap","setState","render","match","path","mapDispacthToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CACC;;AACD,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,SAAR,EAAkBC,+BAAlB,QAAwD,+BAAxD;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACL,mBAAD,CAAlD;AACA,MAAMO,yBAAyB,GAAQF,WAAW,CAACJ,cAAD,CAAlD;;AAEA,MAAOO,QAAP,SAAwBX,KAAK,CAACY,SAA9B,CAAuC;AAAA;AAAA;AAAA,SAErCC,KAFqC,GAE7B;AACNC,MAAAA,OAAO,EAAG;AADJ,KAF6B;AAAA,SAMrCC,uBANqC,GAMX,IANW;AAAA;;AAQrCC,EAAAA,iBAAiB,GAAE;AAAA,UACVT,iBADU,GACW,KAAKU,KADhB,CACVV,iBADU,EAEjB;;AACA,UAAMW,aAAa,GAAEb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAArB,CAHiB,CAIjB;;AACA;;;;;;;AAMED,IAAAA,aAAa,CAACE,GAAd,CAAkBC,IAAlB,CAAuB,MAAMC,QAAN,IAAiB;AACtC,YAAMC,cAAc,GAAEjB,+BAA+B,CAACgB,QAAD,CAArD;AACAf,MAAAA,iBAAiB,CAACgB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACV,QAAAA,OAAO,EAAG;AAAX,OAAd;AACD,KAJD;AAMH;;AAEFW,EAAAA,MAAM,GAAE;AAAA,UACCC,KADD,GACS,KAAKT,KADd,CACCS,KADD;AAAA,UAECZ,OAFD,GAEY,KAAKD,KAFjB,CAECC,OAFD;AAGN,WACF;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGV,KAAD,IAAU,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAGH;AAA5C,SAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,EAKA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAES,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAGV,KAAD,IAAU,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAGH;AAAvC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA,CADE;AASF;;AAvCsC;;AA0CvC,MAAOW,kBAAkB,GAAGC,QAAQ,KAAK;AACvCtB,EAAAA,iBAAiB,EAAEgB,cAAc,IAAIM,QAAQ,CAACtB,iBAAiB,CAACgB,cAAD,CAAlB;AADN,CAAL,CAApC;;AAIA,eAAerB,OAAO,CAAC,IAAD,EAAM0B,kBAAN,CAAP,CAAiCjB,QAAjC,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n //import 'firebase/firestore';\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport CollectionPage from '../collection/collection.component';\r\nimport {firestore,convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\r\nimport {updateCollections} from \"../../redux/shop/shop.actions\";\r\n\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionPageWithSpinner      = WithSpinner(CollectionPage);\r\n\r\nclass  ShopPage extends React.Component{\r\n\r\n  state = {\r\n    loading : true\r\n  };\r\n\r\n  unsubscribeFromSnapshot = null;\r\n\r\n  componentDidMount(){\r\n    const {updateCollections} = this.props;\r\n    // fetcihing for the collection ref\r\n    const collectionRef =firestore.collection('collections');\r\n    // get the snapShot collection    \r\n    /* collectionRef.onSnapshot(async snapshot=> {\r\n      const collectionsMap =convertCollectionsSnapshotToMap(snapshot)\r\n      updateCollections(collectionsMap);\r\n      this.setState({loading : false});\r\n    });\r\n       */\r\n      collectionRef.get.then(async snapshot=> {\r\n        const collectionsMap =convertCollectionsSnapshotToMap(snapshot)\r\n        updateCollections(collectionsMap);\r\n        this.setState({loading : false});\r\n      });\r\n        \r\n  };\r\n\r\n render(){\r\n   const {match} =this.props;\r\n   const {loading} = this.state;\r\n   return(\r\n <div className='shop-page'>\r\n  { /*  <Route exact path={`${match.path}`} component={CollectionsOverview} />\r\n    <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\r\n   */}\r\n <Route exact path={`${match.path}`} render={(props)=>(<CollectionsOverviewWithSpinner isLoading ={loading}{...props}/>)} />\r\n <Route path={`${match.path}/:collectionId`} render={(props)=>(<CollectionPageWithSpinner isLoading ={loading}{...props}/>)} />\r\n</div>\r\n);\r\n}\r\n}\r\n\r\nconst  mapDispacthToProps = dispatch => ({\r\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\r\n});\r\n\r\nexport default connect(null,mapDispacthToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}