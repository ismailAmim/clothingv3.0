{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\drh\\\\clothingv3.0\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\drh\\\\clothingv3.0\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\drh\\\\clothingv3.0\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component'; //import { auth, /* signInWithGoogle */ } from '../../firebase/firebase.utils';\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport './sign-in.styles.scss';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const _useState = useState({\n    email: \"\",\n    password: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const email = userCredentials.email,\n        password = userCredentials.password;\n  /* constructor(props) {\r\n    super(props);\r\n      this.state = {\r\n      email: '',\r\n      password: ''\r\n    };\r\n  }\r\n  */\n\n  const handleSubmit = async event => {\n    event.preventDefault(); //const {emailSignInStart}  = this.props;\n    //const { email, password } = this.state;\n\n    emailSignInStart(email, password);\n    /*  try {\r\n       await auth.signInWithEmailAndPassword(email, password);\r\n       this.setState({ email: '', password: '' });\r\n     } catch (error) {\r\n       console.log(error);\r\n     } */\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n    setCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  }; //const render() {\n  //const {googleSignInStart} = this.props;\n\n\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit:\n    /* this.handleSubmit */\n    handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    handleChange:\n    /* this.handleChange} */\n    handleChange,\n    value:\n    /* this.state.email */\n    email,\n    label: \"email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value:\n    /* this.state.password */\n    password,\n    handleChange:\n    /* this.handleChange} */\n    handleChange,\n    label: \"password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \" Sign in \"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick:\n    /*signInWithGoogle*/\n    googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Sign in with Google\"))));\n}; //}\n\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/drh/clothingv3.0/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","email","password","userCredentials","setCredentials","handleSubmit","event","preventDefault","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\n//import { auth, /* signInWithGoogle */ } from '../../firebase/firebase.utils';\r\nimport {googleSignInStart, emailSignInStart}\r\n       from '../../redux/user/user.actions';\r\n\r\nimport './sign-in.styles.scss';\r\n\r\nconst SignIn= ({emailSignInStart,googleSignInStart})=>{\r\n  const [userCredentials,setCredentials]= useState({email:\"\",password:\"\"});\r\n  const { email, password } = userCredentials;\r\n  /* constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: '',\r\n      password: ''\r\n    };\r\n  }\r\n */\r\n const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    //const {emailSignInStart}  = this.props;\r\n    //const { email, password } = this.state;\r\n    \r\n     emailSignInStart(email,password);\r\n   /*  try {\r\n      await auth.signInWithEmailAndPassword(email, password);\r\n      this.setState({ email: '', password: '' });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } */\r\n  };\r\n\r\n const handleChange = event => {\r\n    const { value, name } = event.target;\r\n    setCredentials({...userCredentials, [name]: value });\r\n  };\r\n\r\n //const render() {\r\n    //const {googleSignInStart} = this.props;\r\n    return (\r\n     \r\n      <div className='sign-in'>\r\n        <h2>I already have an account</h2>\r\n        <span>Sign in with your email and password</span>\r\n\r\n        <form onSubmit={/* this.handleSubmit */handleSubmit}>\r\n          <FormInput\r\n            name='email'\r\n            type='email'\r\n            handleChange={/* this.handleChange} */handleChange}\r\n            value={/* this.state.email */email}\r\n            label='email'\r\n            required\r\n          />\r\n          <FormInput\r\n            name='password'\r\n            type='password'\r\n            value={/* this.state.password */password}\r\n            handleChange={/* this.handleChange} */handleChange}\r\n            label='password'\r\n            required\r\n          />\r\n          <div className='buttons'>\r\n            <CustomButton type='submit'> Sign in </CustomButton>\r\n            {// to not trigger a submit action form \r\n             //  we change type from submit to button\r\n            }\r\n            <CustomButton type='button' \r\n                          onClick={/*signInWithGoogle*/googleSignInStart} \r\n                          isGoogleSignIn>\r\n              Sign in with Google\r\n            </CustomButton>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n//}\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\ngoogleSignInStart : ()=> dispatch(googleSignInStart()),\r\nemailSignInStart : (email,password)=> dispatch(emailSignInStart({email,password}))\r\n\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}