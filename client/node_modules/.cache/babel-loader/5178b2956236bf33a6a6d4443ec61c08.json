{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\drh\\\\clothingv3.0\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyDMkhuFQxRYLe41Qv-LG0RP454ssnxwVm0\",\n  authDomain: \"crown-98d7f.firebaseapp.com\",\n  databaseURL: \"https://crown-98d7f.firebaseio.com\",\n  projectId: \"crown-98d7f\",\n  storageBucket: \"crown-98d7f.appspot.com\",\n  messagingSenderId: \"509021124659\",\n  appId: \"1:509021124659:web:0417a738f6ba7da281cb46\",\n  measurementId: \"G-ES37CJT3ZG\"\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  //if (!userAuth) return;\n  //const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const userRef = firestore.doc(`users/45454dfdf5dfdfd`);\n  console.log(userRef);\n  const snapShot = await userRef.get();\n  console.log(snapShot);\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName: 'testUser',\n        email: 'randomemail@gmail.com',\n        createdAt\n      }, additionalData));\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/drh/clothingv3.0/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","console","log","snapShot","get","exists","displayName","email","createdAt","Date","set","error","message","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,6BAFC;AAGbC,EAAAA,WAAW,EAAE,oCAHA;AAIbC,EAAAA,SAAS,EAAE,aAJE;AAKbC,EAAAA,aAAa,EAAE,yBALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE,2CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf;AAWAT,QAAQ,CAACU,aAAT,CAAuBT,MAAvB;AAEA,OAAO,MAAMU,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E;AAEA;AACA,QAAMC,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,uBAAf,CAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAaJ,OAAb;AACA,QAAMK,QAAQ,GAAG,MAAML,OAAO,CAACM,GAAR,EAAvB;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAaC,QAAb;;AACD,MAAI,CAACA,QAAQ,CAACE,MAAd,EAAsB;AAAA,UACXC,WADW,GACYV,QADZ,CACXU,WADW;AAAA,UACEC,KADF,GACYX,QADZ,CACEW,KADF;AAEnB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACF,YAAMX,OAAO,CAACY,GAAR;AACJJ,QAAAA,WAAW,EAAG,UADV;AAEJC,QAAAA,KAAK,EAAS,uBAFV;AAGJC,QAAAA;AAHI,SAIDX,cAJC,EAAN;AAMD,KAPD,CAOE,OAAOc,KAAP,EAAc;AACdV,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCS,KAAK,CAACC,OAAzC;AACD;AACF;;AAED,SAAOd,OAAP;AACD,CAxBM;AA0BP,OAAO,MAAMe,IAAI,GAAG7B,QAAQ,CAAC6B,IAAT,EAAb;AACP,OAAO,MAAMd,SAAS,GAAGf,QAAQ,CAACe,SAAT,EAAlB;AAEP,MAAMe,QAAQ,GAAG,IAAI9B,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe9B,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyDMkhuFQxRYLe41Qv-LG0RP454ssnxwVm0\",\r\n  authDomain: \"crown-98d7f.firebaseapp.com\",\r\n  databaseURL: \"https://crown-98d7f.firebaseio.com\",\r\n  projectId: \"crown-98d7f\",\r\n  storageBucket: \"crown-98d7f.appspot.com\",\r\n  messagingSenderId: \"509021124659\",\r\n  appId: \"1:509021124659:web:0417a738f6ba7da281cb46\",\r\n  measurementId: \"G-ES37CJT3ZG\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n  //if (!userAuth) return;\r\n\r\n  //const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n  const userRef = firestore.doc(`users/45454dfdf5dfdfd`);\r\n  console.log (userRef);\r\n  const snapShot = await userRef.get();\r\n  console.log (snapShot);\r\n if (!snapShot.exists) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n    try {\r\n      await userRef.set({\r\n        displayName : 'testUser',\r\n        email       : 'randomemail@gmail.com',\r\n        createdAt,\r\n        ...additionalData\r\n      });\r\n    } catch (error) {\r\n      console.log('error creating user', error.message);\r\n    }\r\n  } \r\n\r\n  return userRef;\r\n};\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}